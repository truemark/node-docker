name: ci

on:
  workflow_dispatch:
  push:
    branches:
      - main
  schedule:
    # Run at 1PM UTC every Monday
    - cron: '0 13 * * 1'
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    branches:
      - main

# https://github.com/gautamkrishnar/keepalive-workflow/discussions/13
permissions:
  id-token: write
  contents: write

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      NODE_18_VERSION: ${{ steps.set-node-versions.outputs.NODE_18_VERSION }}
      NODE_18_TAG_EXISTS: ${{ steps.set-node-versions.outputs.NODE_18_TAG_EXISTS }}
      NODE_20_VERSION: ${{ steps.set-node-versions.outputs.NODE_20_VERSION }}
      NODE_20_TAG_EXISTS: ${{ steps.set-node-versions.outputs.NODE_20_TAG_EXISTS }}
      NODE_22_VERSION: ${{ steps.set-node-versions.outputs.NODE_22_VERSION }}
      NODE_22_TAG_EXISTS: ${{ steps.set-node-versions.outputs.NODE_22_TAG_EXISTS }}
    steps:
        - id: set-node-versions
          run: |
            export NODE_18_VERSION=$(curl -fsSL https://nodejs.org/dist/latest-v18.x/ | grep linux-x64.tar.gz | sed -n "s/.*>node-v\(.*\)-linux.*<.*/\1/p")
            echo "NODE_18_VERSION=${NODE_18_VERSION}" >> $GITHUB_OUTPUT
            echo "NODE_18_VERSION=${NODE_18_VERSION}"
            export NODE_18_TAG_EXISTS=$( curl -fsSL https://api.github.com/repos/truemark/node-docker/tags | jq -r "[.[].name] | index(\"${NODE_18_VERSION}\") != null")
            echo "NODE_18_TAG_EXISTS=${NODE_18_TAG_EXISTS}" >> $GITHUB_OUTPUT
            echo "NODE_18_TAG_EXISTS=${NODE_18_TAG_EXISTS}"
            export NODE_20_VERSION=$(curl -fsSL https://nodejs.org/dist/latest-v20.x/ | grep linux-x64.tar.gz | sed -n "s/.*>node-v\(.*\)-linux.*<.*/\1/p")
            echo "NODE_20_VERSION=${NODE_20_VERSION}" >> $GITHUB_OUTPUT
            echo "NODE_20_VERSION=${NODE_20_VERSION}"
            export NODE_20_TAG_EXISTS=$( curl -fsSL https://api.github.com/repos/truemark/node-docker/tags | jq -r "[.[].name] | index(\"${NODE_20_VERSION}\") != null")
            echo "NODE_20_TAG_EXISTS=${NODE_20_TAG_EXISTS}" >> $GITHUB_OUTPUT
            echo "NODE_20_TAG_EXISTS=${NODE_20_TAG_EXISTS}"
            export NODE_22_VERSION=$(curl -fsSL https://nodejs.org/dist/latest-v22.x/ | grep linux-x64.tar.gz | sed -n "s/.*>node-v\(.*\)-linux.*<.*/\1/p")
            echo "NODE_22_VERSION=${NODE_22_VERSION}" >> $GITHUB_OUTPUT
            echo "NODE_22_VERSION=${NODE_22_VERSION}"
            export NODE_22_TAG_EXISTS=$( curl -fsSL https://api.github.com/repos/truemark/node-docker/tags | jq -r "[.[].name] | index(\"${NODE_22_VERSION}\") != null")
            echo "NODE_22_TAG_EXISTS=${NODE_22_TAG_EXISTS}" >> $GITHUB_OUTPUT
            echo "NODE_22_TAG_EXISTS=${NODE_22_TAG_EXISTS}"

###############################################################################
# Node 18
###############################################################################
  build-18:
    needs: [ prepare ]
    uses: './.github/workflows/build.yml'
    if: ${{ needs.prepare.outputs.NODE_18_TAG_EXISTS != 'true' }}
    strategy:
      matrix:
        os: [
          { name: "alpine", version: "3.16" },
          { name: "alpine", version: "3.17" },
          { name: "alpine", version: "3.18" },
          { name: "alpine", version: "3.19" },
          # { name: "alpine", version: "3.20" }, Doesn't work with Node 18
          { name: "ubuntu", version: "focal" },
          { name: "ubuntu", version: "jammy" },
          # { name: "ubuntu", version: "noble" }, Doesn't work with Node 18
          { name: "debian", version: "bullseye" },
          { name: "debian", version: "bookworm" },
          # { name: "debian", version: "trixie" }, Doesn't work with Node 18
          { name: "amazonlinux", version: "2022" },
          { name: "amazonlinux", version: "2023" }
        ]
    with:
      os_name: ${{ matrix.os.name }}
      os_version: ${{ matrix.os.version }}
      node_version: "${{ needs.prepare.outputs.NODE_18_VERSION }}"
      security_group_id: ${{ vars.SECURITY_GROUP_ID }}
      subnet_id: ${{ vars.SUBNET_ID }}
      instance_profile: ${{ vars.INSTANCE_PROFILE }}
      region: ${{ vars.AWS_REGION }}
    secrets:
      aws_assume_role: ${{ secrets.AWS_ASSUME_ROLE }}
      docker_hub_username: ${{ secrets.DOCKER_HUB_USERNAME }}
      docker_hub_password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  package-18:
    needs: [ prepare, build-18 ]
    uses: './.github/workflows/package.yml'
    if: ${{ needs.prepare.outputs.NODE_18_TAG_EXISTS != 'true' && github.ref == 'refs/heads/main' }}
    with:
      node_version: "${{ needs.prepare.outputs.NODE_18_VERSION }}"
      os_versions: "alpine-3.16 alpine-3.17 alpine-3.18 alpine-3.19 ubuntu-focal ubuntu-jammy debian-bullseye debian-bookworm amazonlinux-2022 amazonlinux-2023"
    secrets:
      docker_hub_username: ${{ secrets.DOCKER_HUB_USERNAME }}
      docker_hub_password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

###############################################################################
# Node 20
###############################################################################
  build-20:
    needs: [ prepare ]
    uses: './.github/workflows/build.yml'
    if: ${{ needs.prepare.outputs.NODE_20_TAG_EXISTS != 'true' }}
    strategy:
      matrix:
        os: [
          { name: "alpine", version: "3.16" },
          { name: "alpine", version: "3.17" },
          { name: "alpine", version: "3.18" },
          { name: "alpine", version: "3.19" },
          { name: "alpine", version: "3.20" },
          { name: "ubuntu", version: "focal" },
          { name: "ubuntu", version: "jammy" },
          { name: "ubuntu", version: "noble" },
          { name: "debian", version: "bullseye" },
          { name: "debian", version: "bookworm" },
          { name: "debian", version: "trixie" },
          { name: "amazonlinux", version: "2022" },
          { name: "amazonlinux", version: "2023" }
        ]
    with:
      os_name: ${{ matrix.os.name }}
      os_version: ${{ matrix.os.version }}
      node_version: "${{ needs.prepare.outputs.NODE_20_VERSION }}"
      security_group_id: ${{ vars.SECURITY_GROUP_ID }}
      subnet_id: ${{ vars.SUBNET_ID }}
      instance_profile: ${{ vars.INSTANCE_PROFILE }}
      region: ${{ vars.AWS_REGION }}
    secrets:
      aws_assume_role: ${{ secrets.AWS_ASSUME_ROLE }}
      docker_hub_username: ${{ secrets.DOCKER_HUB_USERNAME }}
      docker_hub_password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  package-20:
    needs: [ prepare, build-20 ]
    uses: './.github/workflows/package.yml'
    if: ${{ needs.prepare.outputs.NODE_20_TAG_EXISTS != 'true' && github.ref == 'refs/heads/main' }}
    with:
      node_version: "${{ needs.prepare.outputs.NODE_20_VERSION }}"
      os_versions: "alpine-3.16 alpine-3.17 alpine-3.18 alpine-3.19 alpine-3.20 ubuntu-focal ubuntu-jammy ubuntu-noble debian-bullseye debian-bookworm debian-trixie amazonlinux-2022 amazonlinux-2023"
    secrets:
      docker_hub_username: ${{ secrets.DOCKER_HUB_USERNAME }}
      docker_hub_password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

###############################################################################
# Node 22
###############################################################################
  build-22:
    needs: [ prepare ]
    uses: './.github/workflows/build.yml'
    if: ${{ needs.prepare.outputs.NODE_22_TAG_EXISTS != 'true' }}
    strategy:
      matrix:
        os: [
          { name: "alpine", version: "3.16" },
          { name: "alpine", version: "3.17" },
          { name: "alpine", version: "3.18" },
          { name: "alpine", version: "3.19" },
          { name: "alpine", version: "3.20" },
          { name: "ubuntu", version: "jammy" },
          { name: "ubuntu", version: "noble" },
          { name: "debian", version: "bullseye" },
          { name: "debian", version: "bookworm" },
          { name: "debian", version: "trixie" },
          { name: "amazonlinux", version: "2022" },
          { name: "amazonlinux", version: "2023" }
        ]
    with:
      os_name: ${{ matrix.os.name }}
      os_version: ${{ matrix.os.version }}
      node_version: "${{ needs.prepare.outputs.NODE_22_VERSION }}"
      security_group_id: ${{ vars.SECURITY_GROUP_ID }}
      subnet_id: ${{ vars.SUBNET_ID }}
      instance_profile: ${{ vars.INSTANCE_PROFILE }}
      region: ${{ vars.AWS_REGION }}
    secrets:
      aws_assume_role: ${{ secrets.AWS_ASSUME_ROLE }}
      docker_hub_username: ${{ secrets.DOCKER_HUB_USERNAME }}
      docker_hub_password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  package-22:
    needs: [ prepare, build-22 ]
    uses: './.github/workflows/package.yml'
    if: ${{ needs.prepare.outputs.NODE_22_TAG_EXISTS != 'true' && github.ref == 'refs/heads/main' }}
    with:
      node_version: "${{ needs.prepare.outputs.NODE_22_VERSION }}"
      os_versions: "alpine-3.16 alpine-3.17 alpine-3.18 alpine-3.19 alpine-3.20 ubuntu-jammy ubuntu-noble debian-bullseye debian-bookworm debian-trixie amazonlinux-2022 amazonlinux-2023"
    secrets:
      docker_hub_username: ${{ secrets.DOCKER_HUB_USERNAME }}
      docker_hub_password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
