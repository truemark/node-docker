name: build

on:
  workflow_call:
    secrets:
      docker_hub_username:
        description: "Docker Hub username"
        required: false
      docker_hub_password:
        description: "Docker Hub password or token"
        required: false
      aws_assume_role:
        description: "AWS role to assume"
        required: false
    inputs:
      node_version:
        description: "Node version"
        required: true
        type: string
      os_name:
        description: "OS name"
        required: true
        type: string
      os_version:
        description: "OS version"
        required: true
        type: string
      security_group_id:
        description: "Security Group ID"
        required: true
        type: string
      subnet_id:
        description: "Subnet ID"
        required: true
        type: string
      instance_profile:
        description: "Instance Profile"
        required: true
        type: string
      region:
        description: "Region"
        required: true
        type: string
permissions:
  contents: write
  id-token: write
jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      PREFIX: ${{ steps.set-prefix-release.outputs.PREFIX }}${{ steps.set-prefix-beta.outputs.PREFIX }}
      ROOT_PREFIX: ${{ steps.set-prefix-release.outputs.ROOT_PREFIX }}${{ steps.set-prefix-beta.outputs.ROOT_PREFIX }}
      NODE_MAJOR_VERSION: ${{ steps.set-node-major-version.outputs.NODE_MAJOR_VERSION }}
    steps:
      - id: set-prefix-release
        if: github.ref == 'refs/heads/main'
        run: |
          PREFIX=""
          echo "PREFIX=$PREFIX" >> $GITHUB_OUTPUT
          ROOT_PREFIX="latest"
          echo "ROOT_PREFIX=$ROOT_PREFIX" >> $GITHUB_OUTPUT
          echo "ROOT_PREFIX=$ROOT_PREFIX"
      - id: set-prefix-beta
        if: github.ref != 'refs/heads/main'
        run: |
          PREFIX="beta-"
          echo "PREFIX=$PREFIX" >> $GITHUB_OUTPUT
          ROOT_PREFIX="beta"
          echo "ROOT_PREFIX=$ROOT_PREFIX" >> $GITHUB_OUTPUT
          echo "ROOT_PREFIX=$ROOT_PREFIX"
      - id: node-major-version
        run: |
          NODE_MAJOR_VERSION=$(echo "${{ inputs.node_version }}" | awk -F. '{print $1}')
          echo "NODE_MAJOR_VERSION=$NODE_MAJOR_VERSION" >> $GITHUB_OUTPUT
          echo "NODE_MAJOR_VERSION=$NODE_MAJOR_VERSION"
  build-image:
    needs: [ prepare ]
    uses: truemark/github-workflows/.github/workflows/docker-buildx.yml@main
    with:
      dockerfile: "Dockerfile"
      images: "truemark/node:${{ needs.prepare.outputs.PREFIX }}${{ inputs.node_version }}${{ inputs.os_name }}-${{ inputs.os_version }},truemark/node:${{ needs.prepare.outputs.PREFIX }}${{ needs.prepare.outputs.NODE_MAJOR_VERSION }}-${{ inputs.os_name }}-${{ inputs.os_version }}"
      copy_to_ecr_prefix: "public.ecr.aws/truemark"
      docker_build_args: '["OS_NAME=${{ inputs.os_name }}", "OS_VERSION=${{ inputs.os_version }}", "NODE_VERSION=${{ inputs.node_version }}"]'
      security_group_id: ${{ inputs.security_group_id }}
      subnet_id: ${{ inputs.subnet_id }}
      instance_profile: ${{ inputs.instance_profile }}
      region: ${{ inputs.region }}
      use_remote: true
    secrets:
      aws_assume_role: ${{ secrets.aws_assume_role }}
      docker_hub_username: ${{ secrets.docker_hub_username }}
      docker_hub_password: ${{ secrets.docker_hub_password }}
